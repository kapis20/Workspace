
# Instructions for Setting Up Anaconda, Virtual Environment, and Installing Sionna

## 1. Install Anaconda
Download and install Anaconda to manage your environments and dependencies. Use the following commands:

### Step 1.1: Download the Anaconda Installer
Download the latest Anaconda installer from [Anaconda Downloads Page](https://www.anaconda.com/products/distribution).

Or, if you have a direct link, you can use the terminal:

```bash
wget https://repo.anaconda.com/archive/Anaconda3-2024.06-1-Linux-x86_64.sh
```

### Step 1.2: Install Anaconda
Run the installer script:

```bash
bash Anaconda3-2024.06-1-Linux-x86_64.sh
```

Follow the on-screen prompts:
- Press `Enter` to review the license agreement.
- Type `yes` to accept the agreement.
- Choose the installation location (default is `~/anaconda3`).
- When asked, type `yes` to initialize Conda.

After installation, activate Anaconda:

```bash
source ~/.bashrc
```

### Step 1.3: Verify Anaconda Installation
Check that Conda is installed and available:

```bash
conda --version
```

If the version number appears, the installation is successful.

## 2. Create a Conda Virtual Environment
Creating a dedicated virtual environment helps avoid conflicts between different libraries and projects.

### Step 2.1: Create a New Environment
Use the command below to create a new environment called `sionna_env` with Python 3.8:

```bash
conda create --name sionna_env python=3.8
```

### Step 2.2: Activate the Environment
Activate the newly created environment:

```bash
conda activate sionna_env
```

The environment name (`sionna_env`) should now appear at the beginning of your terminal prompt.

## 3. Install Sionna
Sionna requires TensorFlow 2.15. Follow these steps to install TensorFlow and Sionna as outlined in the [official Sionna documentation](https://nvlabs.github.io/sionna/installation.html).

### Step 3.1: Install TensorFlow 2.15
Install TensorFlow 2.15 using the `conda-forge` channel to ensure compatibility:

```bash
conda config --add channels conda-forge
conda install tensorflow=2.15
```

### Step 3.2: Install Additional Dependencies
Some dependencies might be required for Sionna. Install them using:

```bash
pip install numpy matplotlib scipy
```

### Step 3.3: Install Sionna
Once the dependencies are installed, install Sionna using `pip`:

```bash
pip install sionna
```

### Step 3.4: Verify the Sionna Installation
Run the following command to verify that Sionna is correctly installed:

```bash
python -c "import sionna; print(sionna.__version__)"
```

If no errors appear and the version number is printed, Sionna is successfully installed.

## 4. Configuring Visual Studio Code (Optional)
If you want to use Visual Studio Code for development, follow these steps:

### Step 4.1: Open VS Code and Select the Interpreter
1. Open VS Code.
2. Press `Ctrl + Shift + P` and select **Python: Select Interpreter**.
3. Choose the interpreter from your `sionna_env` environment (`~/anaconda3/envs/sionna_env/bin/python`).

### Step 4.2: Test the Setup in VS Code
1. Create a new Python file (e.g., `test_sionna.py`).
2. Add the following content:

    ```python
    import sionna
    import tensorflow as tf
    print(f"Sionna version: {sionna.__version__}")
    print(f"TensorFlow version: {tf.__version__}")
    ```

3. Save the file and run it using the VS Code terminal or the **Run** button.

## 5. Deactivate the Environment
When youâ€™re done, you can deactivate the environment using:

```bash
conda deactivate
```

## 6. Troubleshooting Tips
1. **`conda: command not found`:** Make sure Conda is installed and properly configured by initializing it:

    ```bash
    conda init bash
    source ~/.bashrc
    ```

2. **Package Conflicts:** If you encounter dependency conflicts, try installing TensorFlow and Sionna using `pip` instead:

    ```bash
    pip install tensorflow==2.15 sionna
    ```

With this setup, you should be able to use Sionna without any issues. Let me know if you need any further assistance!
